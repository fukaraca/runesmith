name: push-backend.yml
run-name: Pushing backend by @${{ github.actor }}

on:
  push:
    branches:
      - main
    paths:
      - 'components/runesmith-backend/**'
      - 'deployment/helm/runesmith-backend/**'
      - '.github/workflows/push-backend.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'components/runesmith-backend/**'
      - 'deployment/helm/runesmith-backend/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Compute Base Version & Build Number
        id: compute-version
        run: |
          BASE_VERSION="$(cat ./components/runesmith-backend/.Version | tr -d '[:space:]')"
          BUILD_NUMBER="${{ github.run_number }}"
          FULL_VERSION="${BASE_VERSION}.${BUILD_NUMBER}"

          echo "base_version=$BASE_VERSION" >> "$GITHUB_OUTPUT"
          echo "build_number=$BUILD_NUMBER" >> "$GITHUB_OUTPUT"
          echo "full_version=$FULL_VERSION" >> "$GITHUB_OUTPUT"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT2GHCR }}

      - name: Build and push Docker image for Runesmith Backend
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64 # minikube for now
          context: .
          file: ./components/runesmith-backend/Dockerfile
          build-args: |
            FULL_VERSION=${{ steps.compute-version.outputs.full_version }}
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/runesmith-backend:${{ steps.compute-version.outputs.full_version }}
            ghcr.io/${{ github.repository_owner }}/runesmith-backend:latest

      - name: Package chart
        env:
          CHART_VERSION: ${{ steps.compute-version.outputs.full_version }}
        run: |
          helm package ./deployment/helm/runesmith-backend \
            --version "$CHART_VERSION" \
            --app-version "$CHART_VERSION" \
            --destination ./chart-dist

      - name: Push chart to GHCR
        env:
          CHART_VERSION: ${{ steps.compute-version.outputs.full_version }}
          GHCR_REPO: ghcr.io/${{ github.repository_owner }}/helm
        run: |
          helm registry login ghcr.io \
            --username '${{ github.actor }}' \
            --password '${{ secrets.PAT2GHCR }}'

          helm push ./chart-dist/runesmith-backend-"$CHART_VERSION".tgz \
            oci://$GHCR_REPO


  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    needs: build-and-push
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3

      - uses: azure/setup-helm@v4
        with: { version: v3.14.4 }
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with: { version: v1.30.0 }

      - name: Write kubeconfig
        run: |
          echo "${{ secrets.AWS_KUBECONFIG }}" > kubeconfig
          echo "KUBECONFIG=$PWD/kubeconfig" >> $GITHUB_ENV


      - name: Helm registry login
        run: |
          helm registry login ghcr.io \
            --username '${{ github.actor }}' \
            --password '${{ secrets.PAT2GHCR }}'

      - name: Sync registry secret
        run: |
          kubectl create secret docker-registry ghcr-login-secret \
              --docker-server=https://ghcr.io \
              --docker-username='${{ github.actor }}' \
              --docker-password='${{ secrets.PAT2GHCR }}' \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Helm upgrade
        run: |
          helm upgrade --install --debug --wait --atomic --timeout 5m runesmith-backend \
            oci://ghcr.io/${{ github.repository_owner }}/helm/runesmith-backend \
            --set imagePullSecrets[0].name=ghcr-login-secret \
            --set-string ingress.hosts[0].host='${{ vars.EC2_DNS }}'